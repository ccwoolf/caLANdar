{
  "db_name": "PostgreSQL",
  "query": "WITH event_game_patch_response AS (\n            INSERT INTO event_game_vote (event_id, game_id, email, vote)\n                VALUES ($1, $2, $3, $4)\n                ON CONFLICT (event_id, game_id, email) DO UPDATE SET vote = $4, last_modified = NOW()\n                RETURNING event_id, game_id, email, vote, vote_date, last_modified\n        ) SELECT\n            event_game.event_id AS event_id,\n            event_game.game_id AS game_id,\n            steam_game.name AS game_name,\n            event_game.user_email AS user_email,\n            self_vote.vote AS \"self_vote: _\",\n            CASE\n                WHEN self_vote.vote = 'yes'::vote THEN count(all_votes.*) + 1\n                ELSE count(all_votes.*) - 1\n            END AS votes,\n            event_game.requested_at AS requested_at,\n            event_game.last_modified AS last_modified\n        FROM event_game\n        INNER JOIN steam_game\n            ON event_game.game_id = steam_game.appid\n        LEFT JOIN event_game_patch_response AS self_vote\n            ON event_game.event_id = self_vote.event_id\n            AND event_game.game_id = self_vote.game_id\n        LEFT JOIN event_game_vote AS all_votes\n            ON event_game.event_id = all_votes.event_id\n            AND event_game.game_id = all_votes.game_id\n            AND all_votes.vote = 'yes'::vote\n        WHERE event_game.event_id = $1\n        AND event_game.game_id = $2\n        GROUP BY event_game.event_id, event_game.game_id, steam_game.name, steam_game.last_modified, event_game.requested_at, event_game.last_modified, self_vote.vote",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "event_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "game_id",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "game_name",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "user_email",
        "type_info": "Varchar"
      },
      {
        "ordinal": 4,
        "name": "self_vote: _",
        "type_info": {
          "Custom": {
            "name": "vote",
            "kind": {
              "Enum": [
                "yes",
                "novote",
                "no"
              ]
            }
          }
        }
      },
      {
        "ordinal": 5,
        "name": "votes",
        "type_info": "Int8"
      },
      {
        "ordinal": 6,
        "name": "requested_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 7,
        "name": "last_modified",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "Int8",
        "Varchar",
        {
          "Custom": {
            "name": "vote",
            "kind": {
              "Enum": [
                "yes",
                "novote",
                "no"
              ]
            }
          }
        }
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      null,
      false,
      false
    ]
  },
  "hash": "ebc1d18083e8d303de61c310f0cf5cbe04e74122818bc6217967399d5a96aa29"
}
